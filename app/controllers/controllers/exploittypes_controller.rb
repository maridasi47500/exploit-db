class ExploittypesController < ApplicationController
  before_action :set_exploittype, only: %i[ show edit update destroy ]

  # GET /exploittypes or /exploittypes.json
  def index
    @exploittypes = Exploittype.all
  end

  # GET /exploittypes/1 or /exploittypes/1.json
  def show
  end

  # GET /exploittypes/new
  def new
    @exploittype = Exploittype.new
  end

  # GET /exploittypes/1/edit
  def edit
  end

  # POST /exploittypes or /exploittypes.json
  def create
    @exploittype = Exploittype.new(exploittype_params)

    respond_to do |format|
      if @exploittype.save
        format.html { redirect_to exploittype_url(@exploittype), notice: "Exploittype was successfully created." }
        format.json { render :show, status: :created, location: @exploittype }
      else
        format.html { render :new, status: :unprocessable_entity }
        format.json { render json: @exploittype.errors, status: :unprocessable_entity }
      end
    end
  end

  # PATCH/PUT /exploittypes/1 or /exploittypes/1.json
  def update
    respond_to do |format|
      if @exploittype.update(exploittype_params)
        format.html { redirect_to exploittype_url(@exploittype), notice: "Exploittype was successfully updated." }
        format.json { render :show, status: :ok, location: @exploittype }
      else
        format.html { render :edit, status: :unprocessable_entity }
        format.json { render json: @exploittype.errors, status: :unprocessable_entity }
      end
    end
  end

  # DELETE /exploittypes/1 or /exploittypes/1.json
  def destroy
    @exploittype.destroy

    respond_to do |format|
      format.html { redirect_to exploittypes_url, notice: "Exploittype was successfully destroyed." }
      format.json { head :no_content }
    end
  end

  private
    # Use callbacks to share common setup or constraints between actions.
    def set_exploittype
      @exploittype = Exploittype.find(params[:id])
    end

    # Only allow a list of trusted parameters through.
    def exploittype_params
      params.require(:exploittype).permit(:name)
    end
end
