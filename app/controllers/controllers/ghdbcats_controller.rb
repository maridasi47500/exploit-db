class GhdbcatsController < ApplicationController
  before_action :set_ghdbcat, only: %i[ show edit update destroy ]

  # GET /ghdbcats or /ghdbcats.json
  def index
    @ghdbcats = Ghdbcat.all
  end

  # GET /ghdbcats/1 or /ghdbcats/1.json
  def show
  end

  # GET /ghdbcats/new
  def new
    @ghdbcat = Ghdbcat.new
  end

  # GET /ghdbcats/1/edit
  def edit
  end

  # POST /ghdbcats or /ghdbcats.json
  def create
    @ghdbcat = Ghdbcat.new(ghdbcat_params)

    respond_to do |format|
      if @ghdbcat.save
        format.html { redirect_to ghdbcat_url(@ghdbcat), notice: "Ghdbcat was successfully created." }
        format.json { render :show, status: :created, location: @ghdbcat }
      else
        format.html { render :new, status: :unprocessable_entity }
        format.json { render json: @ghdbcat.errors, status: :unprocessable_entity }
      end
    end
  end

  # PATCH/PUT /ghdbcats/1 or /ghdbcats/1.json
  def update
    respond_to do |format|
      if @ghdbcat.update(ghdbcat_params)
        format.html { redirect_to ghdbcat_url(@ghdbcat), notice: "Ghdbcat was successfully updated." }
        format.json { render :show, status: :ok, location: @ghdbcat }
      else
        format.html { render :edit, status: :unprocessable_entity }
        format.json { render json: @ghdbcat.errors, status: :unprocessable_entity }
      end
    end
  end

  # DELETE /ghdbcats/1 or /ghdbcats/1.json
  def destroy
    @ghdbcat.destroy

    respond_to do |format|
      format.html { redirect_to ghdbcats_url, notice: "Ghdbcat was successfully destroyed." }
      format.json { head :no_content }
    end
  end

  private
    # Use callbacks to share common setup or constraints between actions.
    def set_ghdbcat
      @ghdbcat = Ghdbcat.find(params[:id])
    end

    # Only allow a list of trusted parameters through.
    def ghdbcat_params
      params.require(:ghdbcat).permit(:name)
    end
end
