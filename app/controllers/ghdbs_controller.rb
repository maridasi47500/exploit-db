class GhdbsController < ApplicationController
  before_action :set_ghdb, only: %i[ show edit update destroy ]

  # GET /ghdbs or /ghdbs.json
  def index
    @ghdbs = Ghdbase.all
  end

  # GET /ghdbs/1 or /ghdbs/1.json
  def show
  end

  # GET /ghdbs/new
  def new
    @ghdb = Ghdbase.new
  end

  # GET /ghdbs/1/edit
  def edit
  end

  # POST /ghdbs or /ghdbs.json
  def create
    @ghdb = Ghdbase.new(ghdb_params)

    respond_to do |format|
      if @ghdb.save
        format.html { redirect_to ghdb_url(@ghdb), notice: "Ghdbase was successfully created." }
        format.json { render :show, status: :created, location: @ghdb }
      else
        format.html { render :new, status: :unprocessable_entity }
        format.json { render json: @ghdb.errors, status: :unprocessable_entity }
      end
    end
  end

  # PATCH/PUT /ghdbs/1 or /ghdbs/1.json
  def update
    respond_to do |format|
      if @ghdb.update(ghdb_params)
        format.html { redirect_to ghdb_url(@ghdb), notice: "Ghdbase was successfully updated." }
        format.json { render :show, status: :ok, location: @ghdb }
      else
        format.html { render :edit, status: :unprocessable_entity }
        format.json { render json: @ghdb.errors, status: :unprocessable_entity }
      end
    end
  end

  # DELETE /ghdbs/1 or /ghdbs/1.json
  def destroy
    @ghdb.destroy

    respond_to do |format|
      format.html { redirect_to ghdbs_url, notice: "Ghdbase was successfully destroyed." }
      format.json { head :no_content }
    end
  end

  private
    # Use callbacks to share common setup or constraints between actions.
    def set_ghdb
      @ghdb = Ghdbase.find(params[:id])
    end

    # Only allow a list of trusted parameters through.
    def ghdb_params
      params.require(:ghdbase).permit( :author_id, :description, :search, :content, :ghdbcat_id)
    end
end
